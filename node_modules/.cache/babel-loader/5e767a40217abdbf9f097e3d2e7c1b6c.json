{"ast":null,"code":"var _jsxFileName = \"/Users/gimminji/study/assignment/d/v_2/daib/src/pages/Main/Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport { addInputData } from \"../../redux/actions/Index\";\nimport List from \"./component/List\";\nimport Form from \"./component/Form\";\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\nconst requestInstance = axios.create({\n  headers: {\n    \"x-access-token\": X_ACCESS_TOKEN,\n    \"Content-Type\": \"application/json\"\n  },\n  baseURL: 'http://dauth.daios.net/v1',\n  timeout: 3000,\n  timeoutErrorMessage: '다시 시도 바랍니다.'\n});\n\nconst Main = ({\n  addInputData,\n  nickName,\n  content\n}) => {\n  const [getPostData, setGetPostData] = useState([]);\n  useEffect(() => {\n    async function responseDelay() {\n      await showPost();\n    }\n\n    responseDelay();\n  }, []);\n\n  const InputChange = e => {\n    const target = e.target;\n    console.log(addInputData);\n    console.log(target.name, target.value);\n    addInputData(target.name, target.value);\n  };\n\n  const creatPost = async data => {\n    try {\n      if (Object.values(data).filter(v => v).length !== 2) {\n        alert('내용을 입력 바랍니다.');\n        return;\n      }\n      /* const response = await requestInstance.post(\"/boards\", creatPostData);\n       \n       setCreatePostdata({\n           nickName:\"\",\n           content:\"\",                \n       })\n        let createRequestResult = await response.data;\n        setGetPostData(getPostData.concat(createRequestResult.data));\n       \n       return createRequestResult;*/\n\n    } catch (error) {\n      console.log('Error', error.message);\n    }\n  };\n\n  const showPost = async () => {\n    try {\n      const response = await requestInstance.get(\"/boards\");\n      return setGetPostData(await response.data.data);\n    } catch (error) {\n      console.error('Error', error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    nickName: nickName,\n    content: content,\n    onSubmit: creatPost,\n    onChange: InputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    list: getPostData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = InputData => {\n  console.log(InputData);\n  return {\n    nickName: InputData.InputData.nickName,\n    content: InputData.InputData.content\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addInputData: bindActionCreators(addInputData, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addInputData\n})(Main);","map":{"version":3,"sources":["/Users/gimminji/study/assignment/d/v_2/daib/src/pages/Main/Main.js"],"names":["React","useState","useEffect","connect","styled","axios","bindActionCreators","addInputData","List","Form","X_ACCESS_TOKEN","requestInstance","create","headers","baseURL","timeout","timeoutErrorMessage","Main","nickName","content","getPostData","setGetPostData","responseDelay","showPost","InputChange","e","target","console","log","name","value","creatPost","data","Object","values","filter","v","length","alert","error","message","response","get","mapStateToProps","InputData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\"\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport { addInputData } from \"../../redux/actions/Index\"\nimport List from \"./component/List\";\nimport Form from \"./component/Form\";\n\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\n\nconst requestInstance = axios.create({\n    headers:{\n        \"x-access-token\": X_ACCESS_TOKEN,\n        \"Content-Type\":\"application/json\"\n    },\n    baseURL: 'http://dauth.daios.net/v1',\n    timeout: 3000,\n    timeoutErrorMessage: '다시 시도 바랍니다.',\n});\n\nconst Main = ({addInputData, nickName, content}) => {\n\n    const [getPostData, setGetPostData] = useState([]);\n\n    useEffect(() => {\n        async function responseDelay () {\n            await showPost();\n        }\n        responseDelay();\n    },[])\n\n    const InputChange = (e) => {\n        const target = e.target;\n\n        console.log(addInputData);\n        console.log(target.name, target.value);\n\n       addInputData( target.name, target.value );\n    }\n\n    const creatPost = async (data) => {\n\n       try {\n            \n            if (Object.values(data).filter(v => v).length !== 2) {\n                alert('내용을 입력 바랍니다.');\n                return;\n            }\n\n           /* const response = await requestInstance.post(\"/boards\", creatPostData);\n            \n            setCreatePostdata({\n                nickName:\"\",\n                content:\"\",                \n            })\n\n            let createRequestResult = await response.data;\n\n            setGetPostData(getPostData.concat(createRequestResult.data));\n            \n            return createRequestResult;*/\n\n        } catch(error) {\n            console.log('Error', error.message);            \n        }\n        \n    }\n    \n    const showPost = async () => {\n\n        try {\n            const response = await requestInstance.get(\"/boards\");\n            return setGetPostData(await response.data.data);\n        } catch (error) {\n            console.error('Error', error.message);\n        }\n    }\n    \n    return (\n        <div>\n            <Form nickName={nickName} content={content} onSubmit={creatPost} onChange={InputChange} />\n            <List list={getPostData} />\n        </div>\n    );\n};\n\nconst mapStateToProps = (InputData) => {\n\n    console.log(InputData);\n    \n    return {\n        nickName: InputData.InputData.nickName,\n        content: InputData.InputData.content\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        addInputData: bindActionCreators(addInputData, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, {addInputData})(Main);"]},"metadata":{},"sourceType":"module"}