{"ast":null,"code":"import { ADD_INPUT_DATA, POST_INPUT_DATA } from \"../ActionTypes\";\nconst initialState = {\n  input: {\n    nickName: \"\",\n    content: \"\"\n  },\n  list: [{\n    _id: 0,\n    content: \"\",\n    nickName: \"\",\n    createdAt: \"\",\n    __v: 0\n  }]\n};\nexport default function addInputData(state = initialState, action) {\n  console.log(\"types\", action);\n\n  switch (action.type) {\n    case ADD_INPUT_DATA:\n      return { ...state,\n        input: action.payload\n      };\n\n    case POST_INPUT_DATA:\n      return { ...state,\n        input: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/gimminji/study/assignment/d/v_2/daib/src/redux/reducers/InputData.js"],"names":["ADD_INPUT_DATA","POST_INPUT_DATA","initialState","input","nickName","content","list","_id","createdAt","__v","addInputData","state","action","console","log","type","payload"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,gBAAhD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,OAAO,EAAE;AAFN,GADU;AAKjBC,EAAAA,IAAI,EAAC,CACD;AACAC,IAAAA,GAAG,EAAE,CADL;AAEAF,IAAAA,OAAO,EAAE,EAFT;AAGAD,IAAAA,QAAQ,EAAE,EAHV;AAIAI,IAAAA,SAAS,EAAE,EAJX;AAKAC,IAAAA,GAAG,EAAE;AALL,GADC;AALY,CAArB;AAiBA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAGT,YAA/B,EAA6CU,MAA7C,EAAqD;AAEhEC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,MAApB;;AAGA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKf,cAAL;AAEI,aAAO,EACH,GAAGW,KADA;AAEHR,QAAAA,KAAK,EAAES,MAAM,CAACI;AAFX,OAAP;;AAKJ,SAAKf,eAAL;AAEI,aAAO,EACH,GAAGU,KADA;AAEHR,QAAAA,KAAK,EAAES,MAAM,CAACI;AAFX,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAfR;AAiBH","sourcesContent":["import { ADD_INPUT_DATA, POST_INPUT_DATA } from \"../ActionTypes\"\n\nconst initialState = {\n    input: {\n        nickName: \"\",\n        content: \"\"\n    },\n    list:[\n        {\n        _id: 0,\n        content: \"\",\n        nickName: \"\",\n        createdAt: \"\",\n        __v: 0\n        }\n\n    ]\n}\n\nexport default function addInputData (state = initialState, action) {\n\n    console.log(\"types\",action);\n    \n\n    switch (action.type) {\n        case ADD_INPUT_DATA:\n\n            return {\n                ...state,\n                input: action.payload\n            };\n\n        case POST_INPUT_DATA:\n\n            return {\n                ...state,\n                input: action.payload\n            };         \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}