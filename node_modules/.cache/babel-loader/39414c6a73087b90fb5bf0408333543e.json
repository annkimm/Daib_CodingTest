{"ast":null,"code":"var _jsxFileName = \"/Users/gimminji/study/assignment/daib/src/pages/Main/Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport List from \"./component/List\";\nimport Form from \"./component/Form\";\nimport * as dataAction from \"../../actions/Index\";\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\nconst requestInstance = axios.create({\n  headers: {\n    \"x-access-token\": X_ACCESS_TOKEN,\n    \"Content-Type\": \"application/json\"\n  },\n  baseURL: 'http://dauth.daios.net/v1',\n  timeout: 3000,\n  timeoutErrorMessage: '다시 시도 바랍니다.'\n});\n\nconst Main = ({\n  dataAction,\n  input,\n  list\n}) => {\n  const [getPostData, setGetPostData] = useState([]);\n  const [creatPostData, setCreatePostdata] = useState({\n    nickName: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    async function responseDelay() {\n      await showPost();\n    }\n\n    responseDelay();\n  }, []);\n\n  const inputChange = (name, value) => {\n    setCreatePostdata(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const creatPost = async data => {\n    try {\n      if (Object.values(data).filter(v => v).length !== 2) {\n        alert('내용을 입력 바랍니다.');\n        return;\n      }\n\n      const response = await requestInstance.post(\"/boards\", creatPostData);\n      setCreatePostdata({\n        nickName: \"\",\n        content: \"\"\n      });\n      let createRequestResult = await response.data;\n      setGetPostData(getPostData.concat(createRequestResult.data));\n      return createRequestResult;\n    } catch (error) {\n      console.log('Error', error.message);\n    }\n  };\n\n  const showPost = async () => {\n    try {\n      const response = await requestInstance.get(\"/boards\");\n      return setGetPostData(await response.data.data);\n    } catch (error) {\n      console.error('Error', error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    value: creatPostData,\n    onSubmit: creatPost,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    list: getPostData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  state\n}) => {\n  return {\n    input: {\n      nickName: state.InputData.nickName,\n      content: state.InputData.content\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addInputData: ({\n      nickName,\n      content\n    }) => {\n      dispatch();\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/gimminji/study/assignment/daib/src/pages/Main/Main.js"],"names":["React","useState","useEffect","connect","styled","axios","List","Form","dataAction","X_ACCESS_TOKEN","requestInstance","create","headers","baseURL","timeout","timeoutErrorMessage","Main","input","list","getPostData","setGetPostData","creatPostData","setCreatePostdata","nickName","content","responseDelay","showPost","inputChange","name","value","prev","creatPost","data","Object","values","filter","v","length","alert","response","post","createRequestResult","concat","error","console","log","message","get","mapStateToProps","state","InputData","mapDispatchToProps","dispatch","addInputData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\"\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport List from \"./component/List\"\nimport Form from \"./component/Form\"\nimport * as dataAction from \"../../actions/Index\"\n\n\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\n\nconst requestInstance = axios.create({\n    headers:{\n        \"x-access-token\": X_ACCESS_TOKEN,\n        \"Content-Type\":\"application/json\"\n    },\n    baseURL: 'http://dauth.daios.net/v1',\n    timeout: 3000,\n    timeoutErrorMessage: '다시 시도 바랍니다.',\n});\n\nconst Main = ({dataAction, input, list}) => {\n\n    const [getPostData, setGetPostData] = useState([]);\n    const [creatPostData, setCreatePostdata] = useState({\n        nickName:\"\",\n        content:\"\",\n    })\n\n    useEffect(() => {\n        async function responseDelay () {\n            await showPost();\n        }\n        responseDelay();\n    },[])\n\n    const inputChange = (name, value) => {\n\n        setCreatePostdata((prev) => ({\n            ...prev,\n            [name] : value\n        }));\n    }\n\n    const creatPost = async (data) => {\n\n       try {\n            \n            if (Object.values(data).filter(v => v).length !== 2) {\n                alert('내용을 입력 바랍니다.');\n                return;\n            }\n\n            const response = await requestInstance.post(\"/boards\", creatPostData);\n            \n            setCreatePostdata({\n                nickName:\"\",\n                content:\"\",                \n            })\n\n            let createRequestResult = await response.data;\n\n            setGetPostData(getPostData.concat(createRequestResult.data));\n            \n            return createRequestResult;\n\n        } catch(error) {\n            console.log('Error', error.message);            \n        }\n        \n    }\n    \n    const showPost = async () => {\n\n        try {\n            const response = await requestInstance.get(\"/boards\");\n            return setGetPostData(await response.data.data);\n        } catch (error) {\n            console.error('Error', error.message);\n        }\n    }\n    \n    return (\n        <div>\n            <Form value={creatPostData} onSubmit={creatPost} onChange={inputChange} />\n            <List list={getPostData} />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({state}) => {\n    return {\n        input: {\n            nickName: state.InputData.nickName,\n            content: state.InputData.content\n        }\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    \n    return {\n        addInputData:({ nickName, content }) => {\n            dispatch()\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);"]},"metadata":{},"sourceType":"module"}