{"ast":null,"code":"var _jsxFileName = \"/Users/gimminji/study/assignment/daib/src/pages/Main/Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\nconst requestInstance = axios.create({\n  headers: {\n    \"x-access-token\": X_ACCESS_TOKEN,\n    \"Content-Type\": \"application/json\"\n  },\n  baseURL: 'http://dauth.daios.net/v1',\n  timeout: 3000,\n  timeoutErrorMessage: '다시 시도 바랍니다.'\n});\n\nconst Main = () => {\n  const [data, setData] = useState([]);\n  const [creatPostData, setCreatePostdata] = useState({\n    nickName: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    async function responseDelay() {\n      await showPost();\n    }\n\n    responseDelay();\n  }, []);\n\n  const inputChange = e => {\n    const inputTarget = e.target;\n    setCreatePostdata(prev => ({ ...prev,\n      [inputTarget.name]: inputTarget.value\n    }));\n  };\n\n  const creatPost = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await requestInstance.post(\"/boards\", creatPostData);\n      return await response.data;\n    } catch (error) {\n      console.log('Error', error.message);\n    }\n  };\n\n  const showPost = async () => {\n    try {\n      const response = await requestInstance.get(\"/boards\");\n      return setData(await response.data.data);\n    } catch (error) {\n      console.error('Error', error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: creatPost,\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"\\uBCC4\\uBA85: \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"별명\",\n    onChange: inputChange,\n    name: \"nickName\",\n    value: creatPostData.nickName,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \" \\uB0B4\\uC6A9: \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"내용\",\n    onChange: inputChange,\n    name: \"content\",\n    value: creatPostData.content,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"\\uC81C\\uCD9C\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, data.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, item._id), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, item.nickName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, item.content), /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, item.createdAt), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, item.__v));\n  })));\n};\n\nconst Input = styled.input`\n  width: calc(550px - 60px);\n  border: 1px solid #333;\n`;\nexport default Main;","map":{"version":3,"sources":["/Users/gimminji/study/assignment/daib/src/pages/Main/Main.js"],"names":["React","useState","useEffect","styled","axios","X_ACCESS_TOKEN","requestInstance","create","headers","baseURL","timeout","timeoutErrorMessage","Main","data","setData","creatPostData","setCreatePostdata","nickName","content","responseDelay","showPost","inputChange","e","inputTarget","target","prev","name","value","creatPost","preventDefault","response","post","error","console","log","message","get","map","item","idx","_id","createdAt","__v","Input","input"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\"\nimport axios from \"axios\"\n\n\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\nconst requestInstance = axios.create({\n    headers:{\n        \"x-access-token\": X_ACCESS_TOKEN,\n        \"Content-Type\":\"application/json\"\n    },\n    baseURL: 'http://dauth.daios.net/v1',\n    timeout: 3000,\n    timeoutErrorMessage: '다시 시도 바랍니다.',\n});\n\n\nconst Main = () => {\n\n    const [data, setData] = useState([]);\n    const [creatPostData, setCreatePostdata] = useState({\n        nickName:\"\",\n        content:\"\",\n    })\n\n    useEffect(() => {\n        async function responseDelay () {\n            await showPost();\n        }\n        responseDelay();\n    },[])\n\n    const inputChange = (e) => {\n        const inputTarget = e.target;\n        setCreatePostdata((prev) => ({\n            ...prev,\n            [inputTarget.name] : inputTarget.value\n        }));\n    }\n\n    const creatPost = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await requestInstance.post(\"/boards\", creatPostData);\n            return await response.data;\n        } catch(error) {\n\n            console.log('Error', error.message);            \n\n        }\n\n    }\n    \n    const showPost = async () => {\n\n        try {\n            const response = await requestInstance.get(\"/boards\");\n            return setData(await response.data.data);\n        } catch (error) {\n            console.error('Error', error.message);\n        }\n    }\n    \n    return (\n        <div>\n            <form onSubmit={creatPost} method=\"post\"> \n                <ol>\n                    <li>별명: <Input placeholder={\"별명\"} onChange={inputChange} name=\"nickName\" value={creatPostData.nickName} type=\"text\"/></li>\n                    <li> 내용: <Input placeholder={\"내용\"}  onChange={inputChange} name=\"content\" value={creatPostData.content} type=\"text\"/></li>\n                </ol>\n                <button type=\"submit\">제출</button>\n            </form>\n\n            <ul>\n                {data.map((item,idx) => {\n\n                    return <li key={idx}>\n                                <span>{item._id}</span>\n                                <span>{item.nickName}</span>\n                                <p>{item.content}</p>\n                                <em>{item.createdAt}</em>\n                                <span>{item.__v}</span>\n                            </li>\n                })}\n            </ul>\n        </div>\n    );\n};\n\nconst Input = styled.input`\n  width: calc(550px - 60px);\n  border: 1px solid #333;\n`;\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}