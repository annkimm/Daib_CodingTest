{"ast":null,"code":"var _jsxFileName = \"/Users/gimminji/study/assignment/d/v_2/daib/src/pages/Main/Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport * as dataActions from \"../../redux/actions/Index\";\nimport List from \"./component/List\";\nimport Form from \"./component/Form\";\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\nconst requestInstance = axios.create({\n  headers: {\n    \"x-access-token\": X_ACCESS_TOKEN,\n    \"Content-Type\": \"application/json\"\n  },\n  baseURL: 'http://dauth.daios.net/v1',\n  timeout: 3000,\n  timeoutErrorMessage: '다시 시도 바랍니다.'\n});\n\nconst Main = ({\n  dataActions,\n  input\n}) => {\n  const [getPostData, setGetPostData] = useState([]);\n  useEffect(() => {\n    async function responseDelay() {\n      await showPost();\n    }\n\n    responseDelay();\n  }, []);\n\n  const InputChange = e => {\n    const target = e.target;\n    console.log(dataActions);\n    dataActions.addInputData(target.name, target.value);\n  };\n\n  const creatPost = async data => {\n    try {\n      if (Object.values(data).filter(v => v).length !== 2) {\n        alert('내용을 입력 바랍니다.');\n        return;\n      }\n      /* const response = await requestInstance.post(\"/boards\", creatPostData);\n       \n       setCreatePostdata({\n           nickName:\"\",\n           content:\"\",                \n       })\n        let createRequestResult = await response.data;\n        setGetPostData(getPostData.concat(createRequestResult.data));\n       \n       return createRequestResult;*/\n\n    } catch (error) {\n      console.log('Error', error.message);\n    }\n  };\n\n  const showPost = async () => {\n    try {\n      const response = await requestInstance.get(\"/boards\");\n      return setGetPostData(await response.data.data);\n    } catch (error) {\n      console.error('Error', error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    input: input,\n    onSubmit: creatPost,\n    onChange: InputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    list: getPostData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  InputData\n}) => {\n  return {\n    input: InputData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dataActions: bindActionCreators(dataActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/gimminji/study/assignment/d/v_2/daib/src/pages/Main/Main.js"],"names":["React","useState","useEffect","connect","styled","axios","bindActionCreators","dataActions","List","Form","X_ACCESS_TOKEN","requestInstance","create","headers","baseURL","timeout","timeoutErrorMessage","Main","input","getPostData","setGetPostData","responseDelay","showPost","InputChange","e","target","console","log","addInputData","name","value","creatPost","data","Object","values","filter","v","length","alert","error","message","response","get","mapStateToProps","InputData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\"\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { bindActionCreators } from \"redux\";\nimport * as dataActions from \"../../redux/actions/Index\"\nimport List from \"./component/List\";\nimport Form from \"./component/Form\";\n\nconst X_ACCESS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZWUyMjJjNmFmOTU2MjAwMTFiNmI5YmEiLCJpYXQiOjE1OTE4NzgzNDIsImV4cCI6MTU5MTk2NDc0Mn0.pdSl7F3P9OIiTjAVynb_wfgyw9anNxQ7RiaJcIONQ6I';\n\nconst requestInstance = axios.create({\n    headers:{\n        \"x-access-token\": X_ACCESS_TOKEN,\n        \"Content-Type\":\"application/json\"\n    },\n    baseURL: 'http://dauth.daios.net/v1',\n    timeout: 3000,\n    timeoutErrorMessage: '다시 시도 바랍니다.',\n});\n\nconst Main = ({dataActions, input}) => {\n\n    const [getPostData, setGetPostData] = useState([]);\n\n    useEffect(() => {\n        async function responseDelay () {\n            await showPost();\n        }\n        responseDelay();\n    },[])\n\n    const InputChange = (e) => {\n        const target = e.target;\n\n        console.log(dataActions);\n        \n\n       dataActions.addInputData( target.name,target.value );\n    }\n\n    const creatPost = async (data) => {\n\n       try {\n            \n            if (Object.values(data).filter(v => v).length !== 2) {\n                alert('내용을 입력 바랍니다.');\n                return;\n            }\n\n           /* const response = await requestInstance.post(\"/boards\", creatPostData);\n            \n            setCreatePostdata({\n                nickName:\"\",\n                content:\"\",                \n            })\n\n            let createRequestResult = await response.data;\n\n            setGetPostData(getPostData.concat(createRequestResult.data));\n            \n            return createRequestResult;*/\n\n        } catch(error) {\n            console.log('Error', error.message);            \n        }\n        \n    }\n    \n    const showPost = async () => {\n\n        try {\n            const response = await requestInstance.get(\"/boards\");\n            return setGetPostData(await response.data.data);\n        } catch (error) {\n            console.error('Error', error.message);\n        }\n    }\n    \n    return (\n        <div>\n            <Form input={input} onSubmit={creatPost} onChange={InputChange} />\n            <List list={getPostData} />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({InputData}) => {\n\n    return {\n        input: InputData,\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        dataActions: bindActionCreators(dataActions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);"]},"metadata":{},"sourceType":"module"}